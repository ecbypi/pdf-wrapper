v0.4.4 (XXX)
* packaging improvements, switch to bundler for development

v0.4.3 (25th October 2010)
* simplify the way I require the various gnome2 gems for maximum bundler
  compatibility

v0.4.2 (24th October 2010)
* Siwtch back to using the ruby-gnome2 gems to satisfy dependencies
  * the latest versions can be installed without root permissions

v0.4.1 (12th October 2010)
* Stop using the ruby-gnome2 gems to satisfy dependencies
  * They can't be installed by non-root users, so don't play nice
    with bundler

v0.4.0 (11th October 2010)
* Extra flexibility in positioning of images
  * replace :center option to image() method with :position and :vposition
  * API INCOMPATIBLE CHANGE. Forces a bump of minor version number

v0.3.5 (29th September 2010)
* Switch to using rubygems to satisfy gnome2 dependencies
  - no more need to install mystery dependencies via other means

v0.3.4 (13th September 2010)
- remove check of cairo bindings version
  - the dependency is already forced by rubygems
  - it was incorrectly thinking the latest version of cairo (1.10) was too old

v0.3.3 (7th September 2010)
- fix loading of poppler lib to work when no xsession is available

v0.3.2 (6th September 2010)
- fix importing of PDF files as images
  - always imports the first page, currently no support for importing the
    second or subsequent pages
- PDF::Wrapper#cell() - allow font size to be specified as a range. The
                        largest size that fits all the cell text will be used

v0.3.1 (24th November 2009)
- avoid errors being printed to stderr when rendering tables
- allow manual page sizes to be specified

v0.3.0 (15th October 2009)
- remove some deprecated functions from Table
- added support for table cells with text and images
- no API incompatible changes to 0.2.1

v0.2.1 (18th November 2008)
- Small bugfix to prevent unnecesary STDERR output by pango

v0.2.0 (15th September 2008)
- API INCOMPATIBLE CHANGE: render() and render_file() are now deprecated.
  - Use the output parameter of the constructor instead
  - In versions before this, we automatically rendered to a StringIO object. This kept
    things simple, but isn't great for scalability. Better to give the user the option
    of bypassing memory and rendering direct to disk.
  - Particuarly useful in rails apps to avoid the memory footprint of mongrels
    blowing out
- Added Wrapper#open()

v0.1.5 (Unreleased)
- Fix text wrapping that crosses page boundaries
  - when a new page is started as a result of a text() call, the text
    should continue at the top of the next page, not the y value the
    text started at

v0.1.4 (Unreleased)
- Wrapper#font_size now accepts a block for temporary font size changes
- Allow the page size to be changed when starting a new page
- Added support for manually setting table column widths
  - prevents the column widths from growing or shrinking automatically
- Deprecated Table#table_options in favour of passing options to Table#new
  - Thanks to Zubin Henner for the suggestion
- Deprecated Table#header_options and Table#headers= in favour of a new method
  that can be used to specify both the content and options of the header row.
  - Thanks to Zubin Henner for the suggestion

v0.1.3 (24th July 2008)
- Require the gem version of cairo
  - >= 1.5. However I recommend >= 1.6.3 to avoid FATAL error under 1.8.7
- Removed Wrapper#scale. Was causing more trouble than it's worth. May re-implement later.
- Allow the render functions to be called multiple times
- Added Wrapper#finished?
- rename Wrapper#render_to_file to Wrapper#render_file.
  - old method still exists with a deprecation warning
- add :rotate option to Wrapper#image (thanks Lourens Naudé)
- borrowed some convenience methods for co-ordinate manipulation from Prawn
- Wrapper#translate now resets the point to 0,0 before yielding

v0.1.1 (Unreleased)
- use a proxy object when building repeating objects to prevent a new page being started

v0.1.0 (28th May 2008)
- added PDF::Wrapper#translate and PDF::Wrapper#scale
- fixed a bug that caused some text to be rendered off the page when wrapping onto 3rd and
  subsequent pages
- Improved table support using a new class PDF::Wrapper::Table
- Added a :center option to Wrapper#image
- Added a :markup option to text related functions. Pango markup can be used to tweak
  text style (bold, italics, super script, etc)
- Replaced PDF::Wrapper#rounded_rectangle with the :radius option to PDF::Wrapper#rectangle
- Allow cells to have a border with rounded corners

v0.0.7 (30th April 2008)
- Added support for creating new pages from a template file (pdf/png/jpg/gif/svg/probably more)
- Convert the params to start_new_page to be an options hash
- Added a :padding option to PDF::Wrapper#image

v0.0.6 (28th April 2008)
- Fix a nasty bug in text layout code

v0.0.5 (27th April 2008)
- Fix crash when inserting multiple images
- added PDF::Wrapper#pad
- added PDF::Wrapper#text_width
- added support for customisable page margins (thanks to Paweł Kondzior)
- added support for cubic Bezier spline paths (thanks to Paweł Kondzior)
- added support for specifying the width of a cell border (thanks to Paweł Kondzior)
- fixed alignment of text (thanks to Paweł Kondzior)

v0.0.4 (12th March 2008)
- added support for custom line widths on primitive drawing shapes (circles,
  lines, etc). Thanks Paweł Kondzior
- fixed a bug where the first line of text in a multi-line cell appeared at the
  current cursor location instead of inside the cell. Thanks Paweł Kondzior
- bumped dependency on PDF::Reader for running specs to 0.6.1

v0.0.3 (17th January 2008)
- added support for repeating elements (like page numbers) via repeating_element
- Ensured consistent behaviour WRT functions moving the internal cursor
  - functions that require positioning info (cell, shapes, etc) will not move
    the cursor at all
  - functions where positioning info in optional (text, image, etc), the cursor
    will be moved to the bottom left corner of the object
- Ensure no unrecognised options are provided to various functions
- Add support for padding between a cell border and its text
- added support for scaling images proportionally
- expanded spec coverage

v0.0.2 (11th January 2008)
- Added support for a range of extra image formats (jpg, pdf, gif, etc)
- Various documentation improvements
- improved the text functions a little, but still lots more to go

v0.0.1 (9th January 2008)
- Initial, pre-alpha, eats small children for breakfast release
